import math
import time

from concurrent.futures import ProcessPoolExecutor

NUMS = [
    112272535095293, 112582705942171, 112272535095293, 115280095190773, 115797848077099,
    1099726899285419, 928565482900633, 620949300806017, 920242272907829, 847215622718557,
    170327999436563, 832533395805983, 679961235426119, 109798127748797, 873507126661997,
    255865904683583, 733050839039087, 454673305780171, 350022585241123, 812129226047863,
    352731124627649, 803273305316329, 623273913665089, 183268443527171, 723689261197363,
    128267158049687, 510406862720527, 309864269670691, 201370611411253, 663231003326791,
    989370579349183, 367611961123681, 907372112551027, 519229612165057, 918441359020403,
    307318914657121, 815924138602981, 851898781094261, 710269849936327, 625955170587641,
    547255190548007, 385382988754873, 461312676728833, 463484715563027, 353946983238809,
    726383487363283, 233012756502683, 307908192029077, 250138324607461, 548890602505801,
]


def is_prime(n):
    if n < 2:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False

    sqrt_n = int(math.floor(math.sqrt(n)))
    for i in range(3, sqrt_n + 1, 2):
        if n % i == 0:
            return False
    return True


if __name__ == '__main__':
    start = time.time()
    with ProcessPoolExecutor(max_workers=10) as executor:
        results = executor.map(is_prime, NUMS)
        for num, result in zip(NUMS, results):
            print(f"{num} is prime: {result}")
    print(f"elapsed: {time.time() - start}")
